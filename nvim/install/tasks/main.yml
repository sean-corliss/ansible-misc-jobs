# - hosts: all
#   vars:
#     nvim_urls:
#       Darwin: https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz
#       Linux: https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
#
#   roles:
#     - role: download_file
#       vars:
#         download_file_url: https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
#         download_file_checksum_url: https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz.sha256sum
#         download_file_checksum_method: sha256
#
- name: Check architecture
  set_fact:
    arch: "{{ ansible_architecture }}"
  failed_when: arch == "arm64" or arch == "aarch64"

- name: Set nvim url based on OS
  set_fact:
    nvim_url: "{{ nvim_urls[ansible_system] }}"

- name: Assert nvim URL is defined
  assert:
    that:
      - nvim_url is defined
      - nvim_url != ''
    fail_msg: "nvim_url is undefined or empty"

- name: get nvim info
  include_role: 
    name: nvim/get-version

- name: If nvim version [{{nvim_version}}] is above [{{nvim_min_version}}]
  set_fact:
    current_version_is_ok: true
  when: 
  - nvim_exists |default(false)|bool == true
  - nvim_version is version(nvim_min_version, '>=')

- block:
    - name: download_file
      include_role:
        name: utils/download_file
      vars:
        download_file_url: "{{nvim_url}}"
        download_file_checksum_url: "{{nvim_url}}.sha256sum"
        download_file_checksum_method: sha256

    - debug: var=dest_file

    - name: Extract nvim {{dest_file}}
      environment:
        PATH: "/usr/local/opt/coreutils/libexec/gnubin:{{ ansible_env.PATH }}"
      args:
        executable: /bin/bash
      shell: |
        set -ex
        os=$(uname -o)
        tar xzf "{{ dest_file }}" -C /usr/local
        if [[ "$os" == "Darwin" ]]; then
          bin=$(find /usr/local -type f -perm +111 -name nvim -print  |head -1)
        else
          bin=$(find /usr/local -type f -executable -name nvim -print |head -1)
        fi
        path_of_nvim=$(dirname $(dirname $bin))
        if [[ "$path_of_nvim" != *"{{version}}"* ]]; then
          mv $path_of_nvim $path_of_nvim-{{version}}
          path_of_nvim=$path_of_nvim-{{version}}
          bin=$path_of_nvim/bin/nvim
        fi
        [[ -x "$bin" ]] && ln -sf $bin /usr/local/bin/
      become: yes
      register: extract_nvim_result

    - debug: var=extract_nvim_result

    - name: recheck nvim version
      include_role: 
        name: nvim/get-version

    - name: remove temp files if version is ok
      ansible.builtin.file:
        path: "{{dest_file}}"
        state: absent
      when: 
      - nvim_exists |default(false)|bool == true
      - nvim_version is version(nvim_min_version, '>=')

  when:
    - current_version_is_ok |default(false)|bool == false

- name: install packages for Archlinux
  package:
    name: "{{ item }}"
    state: present
  when:
  - ansible_distribution == "Archlinux"
  with_items:
  - base-devel
  - npm

